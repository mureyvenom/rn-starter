{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Venom\\\\Desktop\\\\rn-starter\\\\src\\\\screens\\\\ColorScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Add a Color\",\n    onPress: function onPress() {\n      setColors([].concat(_toConsumableArray(colors), [randomRgb()]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          backgroundColor: item,\n          height: 100,\n          width: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar randomRgb = function randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["C:/Users/Venom/Desktop/rn-starter/src/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","randomRgb","item","backgroundColor","height","width","red","Math","floor","random","green","blue","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACMD,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACfE,MADe;AAAA,MACPC,SADO;;AAEtB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACA,IAAA,KAAK,EAAC,aADN;AAEA,IAAA,OAAO,EAAE,mBAAM;AACXA,MAAAA,SAAS,8BAAKD,MAAL,IAAaE,SAAS,EAAtB,GAAT;AACH,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,QAAD;AACA,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIA,IAAJ;AAAA,KADlB;AAEA,IAAA,IAAI,EAAEH,MAFN;AAGA,IAAA,UAAU,EAAE,0BAAY;AAAA,UAAVG,IAAU,QAAVA,IAAU;AACpB,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAED,IAAlB;AAAwBE,UAAAA,MAAM,EAAC,GAA/B;AAAoCC,UAAAA,KAAK,EAAE;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAmBH,CArBD;;AAuBA,IAAMJ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AAEA,kBAAcH,GAAd,UAAsBI,KAAtB,UAAgCC,IAAhC;AAEH,CAPD;;AASA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAIA,eAAehB,WAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {View, Button, StyleSheet, FlatList} from 'react-native';\r\n\r\nconst ColorScreen = () => {\r\n    const [colors, setColors] = useState([]);\r\n    return(\r\n        <View>\r\n            <Button\r\n            title='Add a Color'\r\n            onPress={() => {\r\n                setColors([...colors, randomRgb()])\r\n            }}\r\n            />\r\n            <FlatList\r\n            keyExtractor={item => item}\r\n            data={colors}\r\n            renderItem={({item}) => {\r\n                return(\r\n                    <View style={{backgroundColor: item, height:100, width: 100}}></View>\r\n                )\r\n            }}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst randomRgb = () => {\r\n    const red = Math.floor(Math.random() * 256);\r\n    const green = Math.floor(Math.random() * 256);\r\n    const blue = Math.floor(Math.random() * 256);\r\n\r\n    return `rgb(${red}, ${green}, ${blue})`;\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n})\r\n\r\nexport default ColorScreen;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Venom\\\\Desktop\\\\rn-starter\\\\src\\\\screens\\\\SquareScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ColorCounter from \"../components/ColorCounter\";\nvar COLOR_INCREMENT = 15;\n\nvar reducer = function reducer(state, action) {\n  switch (action.colorToChange) {\n    case 'red':\n      return state.red + action.amount > 255 || state.red + action.amount < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.amount\n      });\n\n    case 'green':\n      return state.green + action.amount > 255 || state.green + action.amount < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.amount\n      });\n\n    case 'blue':\n      return state.blue + action.amount > 255 || state.blue + action.amount < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.amount\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar SquareScreen = function SquareScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var red = state.red,\n      green = state.green,\n      blue = state.blue;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      dispatch({\n        colorToChange: 'red',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      dispatch({\n        colorToChange: 'red',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      dispatch({\n        colorToChange: 'green',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      dispatch({\n        colorToChange: 'green',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      dispatch({\n        colorToChange: 'blue',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      dispatch({\n        colorToChange: 'blue',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 150,\n      width: 150,\n      backgroundColor: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({});\nexport default SquareScreen;","map":{"version":3,"sources":["C:/Users/Venom/Desktop/rn-starter/src/screens/SquareScreen.js"],"names":["React","useReducer","ColorCounter","COLOR_INCREMENT","reducer","state","action","colorToChange","red","amount","green","blue","SquareScreen","dispatch","height","width","backgroundColor","styles","StyleSheet","create"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;;AAEA,OAAOC,YAAP;AAEA,IAAMC,eAAe,GAAG,EAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B,UAAQA,MAAM,CAACC,aAAf;AACI,SAAK,KAAL;AACI,aAAOF,KAAK,CAACG,GAAN,GAAYF,MAAM,CAACG,MAAnB,GAA4B,GAA5B,IAAmCJ,KAAK,CAACG,GAAN,GAAYF,MAAM,CAACG,MAAnB,GAA4B,CAA/D,GACDJ,KADC,mCAEGA,KAFH;AAEUG,QAAAA,GAAG,EAAEH,KAAK,CAACG,GAAN,GAAYF,MAAM,CAACG;AAFlC,QAAP;;AAGJ,SAAK,OAAL;AACI,aAAOJ,KAAK,CAACK,KAAN,GAAcJ,MAAM,CAACG,MAArB,GAA8B,GAA9B,IAAqCJ,KAAK,CAACK,KAAN,GAAcJ,MAAM,CAACG,MAArB,GAA8B,CAAnE,GACDJ,KADC,mCAEGA,KAFH;AAEUK,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,GAAcJ,MAAM,CAACG;AAFtC,QAAP;;AAGJ,SAAK,MAAL;AACI,aAAOJ,KAAK,CAACM,IAAN,GAAaL,MAAM,CAACG,MAApB,GAA6B,GAA7B,IAAoCJ,KAAK,CAACM,IAAN,GAAaL,MAAM,CAACG,MAApB,GAA6B,CAAjE,GACDJ,KADC,mCAEGA,KAFH;AAEUM,QAAAA,IAAI,EAAEN,KAAK,CAACM,IAAN,GAAaL,MAAM,CAACG;AAFpC,QAAP;;AAGJ;AACI,aAAOJ,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,IAAMO,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,oBAEGX,UAAU,CAACG,OAAD,EAAU;AAACI,IAAAA,GAAG,EAAC,CAAL;AAAQE,IAAAA,KAAK,EAAE,CAAf;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAAV,CAFb;AAAA;AAAA,MAEhBN,KAFgB;AAAA,MAETQ,QAFS;;AAAA,MAIhBL,GAJgB,GAIIH,KAJJ,CAIhBG,GAJgB;AAAA,MAIXE,KAJW,GAIIL,KAJJ,CAIXK,KAJW;AAAA,MAIJC,IAJI,GAIIN,KAJJ,CAIJM,IAJI;AAMvB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AACA,IAAA,UAAU,EAAE,sBAAM;AACdE,MAAAA,QAAQ,CAAC;AAACN,QAAAA,aAAa,EAAC,KAAf;AAAsBE,QAAAA,MAAM,EAACN;AAA7B,OAAD,CAAR;AACH,KAHD;AAIA,IAAA,UAAU,EAAE,sBAAI;AACZU,MAAAA,QAAQ,CAAC;AAACN,QAAAA,aAAa,EAAC,KAAf;AAAsBE,QAAAA,MAAM,EAAE,CAAC,CAAD,GAAGN;AAAjC,OAAD,CAAR;AACH,KAND;AAOA,IAAA,KAAK,EAAC,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUI,oBAAC,YAAD;AACA,IAAA,UAAU,EAAE,sBAAM;AACdU,MAAAA,QAAQ,CAAC;AAACN,QAAAA,aAAa,EAAC,OAAf;AAAwBE,QAAAA,MAAM,EAACN;AAA/B,OAAD,CAAR;AACH,KAHD;AAIA,IAAA,UAAU,EAAE,sBAAI;AACZU,MAAAA,QAAQ,CAAC;AAACN,QAAAA,aAAa,EAAC,OAAf;AAAwBE,QAAAA,MAAM,EAAE,CAAC,CAAD,GAAGN;AAAnC,OAAD,CAAR;AACH,KAND;AAOA,IAAA,KAAK,EAAC,OAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAmBI,oBAAC,YAAD;AACA,IAAA,UAAU,EAAE,sBAAM;AACdU,MAAAA,QAAQ,CAAC;AAACN,QAAAA,aAAa,EAAC,MAAf;AAAuBE,QAAAA,MAAM,EAACN;AAA9B,OAAD,CAAR;AACH,KAHD;AAIA,IAAA,UAAU,EAAE,sBAAI;AACZU,MAAAA,QAAQ,CAAC;AAACN,QAAAA,aAAa,EAAC,MAAf;AAAuBE,QAAAA,MAAM,EAAE,CAAC,CAAD,GAAGN;AAAlC,OAAD,CAAR;AACH,KAND;AAOA,IAAA,KAAK,EAAC,MAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EA4BI,oBAAC,IAAD;AACA,IAAA,KAAK,EAAE;AACHW,MAAAA,MAAM,EAAE,GADL;AAEHC,MAAAA,KAAK,EAAC,GAFH;AAGHC,MAAAA,eAAe,WAASR,GAAT,UAAiBE,KAAjB,UAA2BC,IAA3B;AAHZ,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,CADJ;AAsCH,CA5CD;;AA8CA,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAIA,eAAeP,YAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport {View, StyleSheet} from 'react-native';\r\nimport ColorCounter from '../components/ColorCounter';\r\n\r\nconst COLOR_INCREMENT = 15;\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.colorToChange){\r\n        case 'red':\r\n            return state.red + action.amount > 255 || state.red + action.amount < 0\r\n                ? state\r\n                : {...state, red: state.red + action.amount};\r\n        case 'green':\r\n            return state.green + action.amount > 255 || state.green + action.amount < 0\r\n                ? state\r\n                : {...state, green: state.green + action.amount};\r\n        case 'blue':\r\n            return state.blue + action.amount > 255 || state.blue + action.amount < 0\r\n                ? state\r\n                : {...state, blue: state.blue + action.amount};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst SquareScreen = () => {\r\n    \r\n    const [state, dispatch] = useReducer(reducer, {red:0, green: 0, blue: 0});\r\n\r\n    const {red, green, blue} = state;\r\n\r\n    return(\r\n        <View>\r\n            <ColorCounter \r\n            onIncrease={() => {                \r\n                dispatch({colorToChange:'red', amount:COLOR_INCREMENT })\r\n            }}\r\n            onDecrease={()=>{\r\n                dispatch({colorToChange:'red', amount: -1*COLOR_INCREMENT })\r\n            }}\r\n            color='Red'\r\n            />\r\n            <ColorCounter \r\n            onIncrease={() => {\r\n                dispatch({colorToChange:'green', amount:COLOR_INCREMENT })\r\n            }}\r\n            onDecrease={()=>{\r\n                dispatch({colorToChange:'green', amount: -1*COLOR_INCREMENT })\r\n            }}\r\n            color='Green'\r\n            />\r\n            <ColorCounter \r\n            onIncrease={() => {\r\n                dispatch({colorToChange:'blue', amount:COLOR_INCREMENT })\r\n            }}\r\n            onDecrease={()=>{\r\n                dispatch({colorToChange:'blue', amount: -1*COLOR_INCREMENT })\r\n            }}\r\n            color='Blue'\r\n            />\r\n            <View \r\n            style={{\r\n                height: 150, \r\n                width:150, \r\n                backgroundColor: `rgb(${red}, ${green}, ${blue})`}}>\r\n\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n});\r\n\r\nexport default SquareScreen;"]},"metadata":{},"sourceType":"module"}